# Generated by Django 5.2.4 on 2025-08-27 10:11

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ExamInvigilator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("CHIEF", "Chief Invigilator"),
                            ("INVIGILATOR", "Invigilator"),
                            ("ASSISTANT", "Assistant"),
                        ],
                        default="INVIGILATOR",
                        max_length=20,
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Exam Invigilator",
                "verbose_name_plural": "Exam Invigilators",
            },
        ),
        migrations.CreateModel(
            name="ExamSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(help_text="Duration in minutes"),
                ),
                ("max_students_per_room", models.PositiveIntegerField(default=30)),
                ("allow_early_submission", models.BooleanField(default=True)),
                (
                    "allow_late_entry",
                    models.BooleanField(
                        default=False,
                        help_text="Allow students to enter after start time",
                    ),
                ),
                ("instructions", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("SCHEDULED", "Scheduled"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="SCHEDULED",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Exam Schedule",
                "verbose_name_plural": "Exam Schedules",
                "ordering": ["start_time", "subject__name"],
            },
        ),
        migrations.CreateModel(
            name="ExamSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "actual_duration",
                    models.PositiveIntegerField(
                        blank=True, help_text="Actual duration in minutes", null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("REGISTERED", "Registered"),
                            ("STARTED", "Started"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("ABSENT", "Absent"),
                            ("DISQUALIFIED", "Disqualified"),
                        ],
                        default="REGISTERED",
                        max_length=20,
                    ),
                ),
                (
                    "marks_obtained",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("remarks", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Exam Session",
                "verbose_name_plural": "Exam Sessions",
                "ordering": ["exam_schedule__start_time", "student__admission_number"],
            },
        ),
        migrations.CreateModel(
            name="ExamType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "weight",
                    models.PositiveIntegerField(
                        help_text="Weight as percentage of total grade",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("is_mandatory", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
    ]
