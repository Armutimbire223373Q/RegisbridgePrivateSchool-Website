version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: regisbridge
      POSTGRES_USER: regisbridge_user
      POSTGRES_PASSWORD: regisbridge_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U regisbridge_user -d regisbridge"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend
  django:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://regisbridge_user:regisbridge_password@db:5432/regisbridge
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  fastapi:
    build: ./fastapi_backend
    command: python start_server.py
    volumes:
      - ./fastapi_backend:/app
    ports:
      - "8001:8001"
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://regisbridge_user:regisbridge_password@db:5432/regisbridge
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build: ./frontend
    command: npm run dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8001
      - REACT_APP_DJANGO_URL=http://localhost:8000
    depends_on:
      - fastapi
      - django

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - django
      - fastapi
      - frontend

volumes:
  postgres_data:
  static_volume:
  media_volume:
