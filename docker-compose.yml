version: '3.8'

services:
  # Django Web Application
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=regisbridge.settings.development
      - DATABASE_URL=postgresql://postgres:password@db:5432/regisbridge
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - regisbridge_network

  # PostgreSQL Database
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=regisbridge
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - regisbridge_network

  # Redis for Caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - regisbridge_network

  # Celery Worker for Background Tasks
  celery_worker:
    build: .
    command: celery -A regisbridge worker -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=regisbridge.settings.development
      - DATABASE_URL=postgresql://postgres:password@db:5432/regisbridge
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - regisbridge_network

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build: .
    command: celery -A regisbridge beat -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=regisbridge.settings.development
      - DATABASE_URL=postgresql://postgres:password@db:5432/regisbridge
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - regisbridge_network

  # Celery Flower for Monitoring
  celery_flower:
    build: .
    command: celery -A regisbridge flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=regisbridge.settings.development
      - DATABASE_URL=postgresql://postgres:password@db:5432/regisbridge
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - regisbridge_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    networks:
      - regisbridge_network

  # Elasticsearch for Search (Optional)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - regisbridge_network

  # Kibana for Elasticsearch Visualization (Optional)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - regisbridge_network

  # Mailhog for Email Testing (Development)
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - regisbridge_network

  # Adminer for Database Management (Development)
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - regisbridge_network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  static_volume:
  media_volume:

networks:
  regisbridge_network:
    driver: bridge
